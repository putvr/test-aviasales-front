{"version":3,"sources":["components/Header/logo.svg","components/Sidebar/TransferFilter/checklistDisabled.svg","components/Sidebar/TransferFilter/checklistEnabled.svg","components/Content/Ticket/TA.svg","components/Content/Ticket/arrow.svg","components/Header/Header.js","components/Layout/Layout.js","components/Sidebar/CurrencyFilter/CurrencyFilter.js","components/Sidebar/TransferFilter/TransferFilter.js","components/Sidebar/Sidebar.js","components/Content/Ticket/Ticket.js","components/Spinner/Spinner.js","components/Content/Content.js","containers/TicketsFinder/TicketsFinder.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","src","logo","alt","Layout","props","components_Header_Header","children","CurrencyFilter","role","currencyList","map","value","index","concat","active","type","onClick","currencySelectedHandler","key","name","TransferFilter","transfersList","id","transferSelectedHandler","selected","inactive","Sidebar","Sidebar_CurrencyFilter_CurrencyFilter","Sidebar_TransferFilter_TransferFilter","Ticket","ticket","price_currency","departure_time","origin","origin_name","departure_date","departure_date_day","stops_count","arrow","arrival_time","destination","destination_name","arrival_date","arrival_date_day","Spinner","Content","showError","href","ticketsLoading","components_Spinner_Spinner","tickets","visible","Content_Ticket_Ticket","TicketsFinder","state","count","code","updatedList","Object","toConsumableArray","_this","ticketList","forEach","f","stops","setState","updateList","active_currency","find","v","price","toFixed","string","date","Date","setFullYear","split","getDay","_this2","this","request","XMLHttpRequest","overrideMimeType","open","onload","status","data","JSON","parse","response","sort","b","getDayOfWeek","onerror","send","getTicketsData","components_Sidebar_Sidebar","components_Content_Content","Component","App","components_Layout_Layout","containers_TicketsFinder_TicketsFinder","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a3276063.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.d8a27482.svg\";","module.exports = __webpack_public_path__ + \"static/media/checklistDisabled.09a16878.svg\";","module.exports = __webpack_public_path__ + \"static/media/checklistEnabled.41628eb9.svg\";","module.exports = __webpack_public_path__ + \"static/media/TA.382387ab.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow.c7491c9a.svg\";","import React from 'react';\nimport logo from './logo.svg';\n\nconst Header = () => {\n    return (\n        <header className=\"col text-center\">\n            <div>\n                <img src={logo} alt=\"\"/>\n            </div>\n        </header>\n    );\n};\n\nexport default Header;","import React from 'react';\n\nimport Header from '../Header/Header';\n\nconst Layout = (props) => (\n    <div className=\"container App\">\n        <div className=\"row Header\">\n            <Header/>\n        </div>\n        <main>{props.children}</main>\n    </div>\n);\n\nexport default Layout;","import React from 'react';\n\nimport './CurrencyFilter.css';\n\nconst CurrencyFilter = (props) => (\n    <div className=\"btn-group col-sm pl-0\" role=\"group\">\n        {props.currencyList.map((value, index) => {\n            return (\n                <button\n                    className={`btn btn-secondary CurrencyFilter${ value.active ? ' activeButton' : ''}`}\n                    type=\"button\"\n                    onClick={() => props.currencySelectedHandler(index)}\n                    key={index}\n                >\n                    {value.name}\n                </button>\n            );\n        })\n        }\n    </div>\n);\n\nexport default CurrencyFilter;","import React from 'react';\n\n//import PropTypes from 'prop-types';\nimport './TransferFilter.css';\n\nimport inactive from './checklistDisabled.svg';\nimport active from './checklistEnabled.svg';\n\nconst TransferFilter = (props) => (\n    <ul className=\"list-group list-group-flush TransferFilter\">\n        {props.transfersList.map((value) => {\n            return (\n                <li\n                    className=\"list-group-item pl-0\"\n                    key={value.id}\n                    onClick={() => props.transferSelectedHandler(value.id)}>\n                    <img src={`${value.selected ? active : inactive}`} alt=\"\" className=\"img-fluid\"/>\n                    <span>{value.name}</span>\n                </li>);\n        })}\n    </ul>\n);\n\n//TransferFilter.propTypes = {};\n\nexport default TransferFilter;","import React from 'react';\n\nimport './Sidebar.css';\n\nimport CurrencyFilter from './CurrencyFilter/CurrencyFilter';\nimport TransferFilter from './TransferFilter/TransferFilter';\n\nconst Sidebar = (props) => (\n    <div className=\"col-lg-3 mb-3\">\n        <div className=\"container rounded border-white Sidebar\">\n            <div className=\"raw no-gutters pt-3\">\n                <div className=\"col pb-2\">\n                    <span>ВАЛЮТА</span>\n                </div>\n                <div className=\"col\">\n                    <CurrencyFilter\n                        currencyList={props.currencyList}\n                        currencySelectedHandler={props.currencySelectedHandler}\n                    />\n                </div>\n            </div>\n            <div className=\"raw no-gutters pt-3 pb-3\">\n                <div className=\"col\">\n                    <span>КОЛИЧЕСТВО ПЕРЕСАДОК</span>\n                </div>\n                <div className=\"col\">\n                    <TransferFilter\n                        transfersList={props.transfersList}\n                        transferSelectedHandler={props.transferSelectedHandler}\n                    />\n                </div>\n            </div>\n        </div>\n    </div>\n);\n\nexport default Sidebar;","import React from 'react';\n\nimport './Ticket.css';\nimport logo from './TA.svg';\nimport arrow from './arrow.svg';\n\nconst Ticket = (props) => (\n\n    <div className=\"container rounded Ticket mb-3\">\n        <div className=\"row\">\n            <div className=\"col-sm-4 TicketInfo pb-3\">\n                <div className=\"container pt-3\">\n                    <div className=\"row\">\n                        <div className=\"col-sm text-center\">\n                            <img src={logo} className=\"pb-3\" alt=\"\"/>\n                        </div>\n                        <div className=\"w-100\"></div>\n                        <div className=\"col-sm text-center\">\n                            <button className=\"btn\">Купить<br/>за {props.ticket.price_currency}</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"col-sm-8\">\n                <div className=\"container pb-3\">\n                    <div className=\"row\">\n                        <div className=\"col-md-4 col-ld-5 pt-3\">\n                            <div className=\"col-sm FontLeft FontTime\">{props.ticket.departure_time}</div>\n                            <div className=\"col-sm FontLeft FontCity\">\n                                {props.ticket.origin}, {props.ticket.origin_name} <br/>\n                                {props.ticket.departure_date}, {props.ticket.departure_date_day}\n                            </div>\n                        </div>\n                        <div className=\"col-md-4 col-ld-2 pt-3\">\n                            <div className=\"col-sm text-center TicketStops\">\n                                <div>{props.ticket.stops_count ? props.ticket.stops_count : \"\\u00a0\"}</div>\n                                <img className=\"img-fluid\" src={arrow} alt=\"\"/>\n                            </div>\n                        </div>\n                        <div className=\"col-md-4 col-ld-5 pt-3\">\n                            <div className=\"col-sm FontLeft TicketArrival FontTime\">{props.ticket.arrival_time}</div>\n                            <div className=\"col-sm FontLeft FontCity\">\n                                {props.ticket.destination}, {props.ticket.destination_name} <br/>\n                                {props.ticket.arrival_date}, {props.ticket.arrival_date_day}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    </div>\n);\n\nexport default Ticket;","import React from 'react';\n\nimport './Spinner.css';\n\nconst Spinner = () => (\n    <div className=\"lds-roller\">\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n);\n\nexport default Spinner;","import React from 'react';\n\nimport Ticket from './Ticket/Ticket';\nimport Spinner from '../Spinner/Spinner';\n\nconst Content = (props) => {\n    if (props.showError){\n        return(\n            <div className=\"alert alert-danger col-md-8\" role=\"alert\">\n                Network error!  <a href=\"/\" className=\"alert-link\">Reload the page!</a>\n            </div>\n        );\n    }\n\n    if (props.ticketsLoading){\n        return(\n            <div className=\"col-md-8 text-center text\">\n                <Spinner/>\n            </div>\n\n        );\n    }\n\n    return (\n    <div className=\"col-lg-9\">\n        {props.tickets.map((value, index) => {\n                return value.visible ? <Ticket ticket={value} key={index}/> : '';\n            }\n        )}\n    </div>\n    );\n};\n\nexport default Content;","import React, {Component} from 'react';\n//import PropTypes from 'prop-types';\n\nimport Sidebar from '../../components/Sidebar/Sidebar';\nimport Content from '../../components/Content/Content';\n\nclass TicketsFinder extends Component {\n    state = {\n        ticketsLoading: false,\n        tickets: [],\n        showError: false,\n        transfersList: [{id: 0, name: 'Все', selected: true, count: ''},\n            {id: 1, name: 'Без пересадок', selected: false, count: 0},\n            {id: 2, name: '1 пересадка', selected: false, count: 1},\n            {id: 3, name: '2 пересадки', selected: false, count: 2},\n            {id: 4, name: '3 пересадки', selected: false, count: 3}],\n        currencyList: [\n            {name: 'RUB', code: '₽', active: true, value: 1},\n            {name: 'USD', code: '$', active: false, value: 70},\n            {name: 'EUR', code: '€', active: false, value: 80}\n        ]\n    };\n\n    transferSelectedHandler = (id) => {\n        let updatedList = [...this.state.transfersList];\n        let ticketList = [...this.state.tickets];\n\n        if (id === 0 && !updatedList[0].selected) {\n            updatedList.map((value) => {\n                return value.selected = false\n            });\n            updatedList[0].selected = true;\n        }\n        else {\n            updatedList[0].selected = false;\n            updatedList[id].selected = !updatedList[id].selected;\n        }\n\n        ticketList.map((value) => {\n            let visible = false;\n\n            updatedList.forEach((f) => {\n                if (f.selected && value.stops === f.count) {\n                    visible = true;\n                }\n            });\n\n            if (id === 0) {\n                visible = true;\n            }\n\n            return value.visible = visible;\n        });\n\n        this.setState({\n            transfersList: updatedList,\n            tickets: ticketList\n        })\n    };\n\n    currencySelectedHandler = (index) => {\n        let updateList = [...this.state.currencyList];\n        let ticketList = [...this.state.tickets];\n\n        updateList.map((value) => {\n            return value.active = false;\n        });\n\n        updateList[index].active = true;\n\n        ticketList.map((value) => {\n            const active_currency = updateList\n                .find((v) => {\n                    return v.active;\n                });\n            return value.price_currency = `${(value.price / active_currency.value).toFixed(2)} ${active_currency.code}`;\n        });\n\n        this.setState({\n            currencyList: updateList,\n            tickets: ticketList\n        });\n    };\n\n    getDayOfWeek(string) {\n\n        const days = ['Пн',\n            'Вт',\n            'Ср',\n            'Чт',\n            'Пт',\n            'Сб',\n            'Вс'];\n\n        let date = new Date();\n\n        date.setFullYear(\n            '20' + string.split('.')[2],\n            string.split('.')[1] - 1,\n            string.split('.')[0]);\n\n        return days[date.getDay() - 1];\n    }\n\n    getTicketsData(){\n        this.setState({ ticketsLoading: true});\n\n        let request = new XMLHttpRequest();\n        request.overrideMimeType(\"application/json\");\n        request.open('GET', 'https://raw.githubusercontent.com/KosyanMedia/test-tasks/master/aviasales/tickets.json', true);\n        request.onload = () => {\n\n            if (request.status !== 200) {\n                this.setState({showError: true});\n                return\n            }\n\n            let data = JSON.parse(request.response);\n\n            data = data.tickets.sort((a, b) => a.price - b.price);\n\n            data.map((value) => {\n\n                let stops_count;\n\n                switch (value.stops) {\n                    case 0:\n                        stops_count = '';\n                        break;\n                    case 1:\n                        stops_count = '1 пересадка';\n                        break;\n                    default:\n                        stops_count = value.stops + ' пересадки';\n                }\n\n                return (\n                    value.stops_count = stops_count,\n                        value.departure_date_day = this.getDayOfWeek(value.departure_date),\n                        value.arrival_date_day = this.getDayOfWeek(value.arrival_date),\n                        value.visible = true,\n                        value.price_currency = `${value.price } ₽`\n                )\n            });\n\n            this.setState({\n                tickets: data,\n                ticketsLoading: false,\n            });\n        };\n        request.onerror = () => {\n            this.setState({showError: true});\n        };\n        request.send(null);\n\n    }\n\n    componentWillMount() {\n        this.getTicketsData();\n    }\n\n    render() {\n        return (\n            <div className=\"row\">\n                <Sidebar\n                    transfersList={this.state.transfersList}\n                    currencyList={this.state.currencyList}\n                    transferSelectedHandler={this.transferSelectedHandler}\n                    currencySelectedHandler={this.currencySelectedHandler}\n                />\n                <Content\n                    tickets={this.state.tickets}\n                    ticketsLoading={this.state.ticketsLoading}\n                    showError={this.state.showError}\n                />\n            </div>\n        );\n    }\n}\n\n//TicketsFinder.propTypes = {};\n\nexport default TicketsFinder;","import React, {Component} from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'babel-polyfill';\nimport './App.css';\n\nimport Layout from './components/Layout/Layout';\nimport TicketsFinder from './containers/TicketsFinder/TicketsFinder';\n\nclass App extends Component {\n    render() {\n        return (\n            <Layout>\n                <TicketsFinder/>\n            </Layout>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}